// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(uuid())
  username     String          @unique
  email        String          @unique
  password     String
  profilePic   String?
  isOnline     Boolean         @default(false)
  lastSeen     DateTime        @default(now())
  messages     Message[]       @relation("UserMessages")
  conversations ConversationParticipant[]
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model Conversation {
  id           String                     @id @default(uuid())
  name         String?
  isGroup      Boolean                    @default(false)
  participants ConversationParticipant[]
  messages     Message[]
  groupAdmin   String?
  createdAt    DateTime                   @default(now())
  updatedAt    DateTime                   @updatedAt
}

model ConversationParticipant {
  id              String        @id @default(uuid())
  userId          String
  conversationId  String

  user            User          @relation(fields: [userId], references: [id])
  conversation    Conversation  @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId])
}

model Message {
  id             String         @id @default(uuid())
  conversationId String
  senderId       String
  text           String?
  attachments    String[]       @default([])
  readBy         String[]       @default([])
  
  conversation   Conversation   @relation(fields: [conversationId], references: [id])
  sender         User           @relation("UserMessages", fields: [senderId], references: [id])

  createdAt      DateTime       @default(now())
}
